name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: demo-app-repo
  EKS_CLUSTER_NAME: demo-eks-cluster

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests
    
    # Deployment steps start here
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        # Also tag as latest and push
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "ECR_REPOSITORY_URI=$ECR_REGISTRY/$ECR_REPOSITORY" >> $GITHUB_ENV
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
    
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
    
    - name: Set Image Tag in Kubernetes manifests
      run: |
        # Update image tag in the Kubernetes manifests
        sed -i "s|\${ECR_REPOSITORY_URI}|$ECR_REPOSITORY_URI|g" k8s/deployment.yaml
        sed -i "s|\${IMAGE_TAG}|$IMAGE_TAG|g" k8s/deployment.yaml
        
        # Show the updated deployment file
        echo "Updated deployment.yaml:"
        cat k8s/deployment.yaml
    
    - name: Deploy to Kubernetes
      run: |
        # Apply namespace first
        kubectl apply -f k8s/namespace.yaml
        
        # Apply the other manifests
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/ingress.yaml
    
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/demo-app -n demo-app --timeout=180s
        echo "Application deployed successfully!"
        
    - name: Get service details
      run: |
        echo "Service details:"
        kubectl get services -n demo-app
        echo "Ingress details:"
        kubectl get ingress -n demo-app